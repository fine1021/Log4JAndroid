apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 1

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

afterEvaluate {
    tasks.withType(Javadoc) {
        failOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'log4j:log4j:1.2.17'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

ext {
    USER_ORG = 'fine1021'
    REPO_NAME = 'maven'
    GROUP_ID = 'simple.android.log4j'
    ARTIFACT_ID = 'log4j-android'
    DESCRIPTION = 'a support log4j library for android'
    PUBLISH_VERSION = "${versionMajor}.${versionMinor}.${versionPatch}"
    WEB_SITE = 'https://github.com/fine1021/Log4JAndroid'
}

task binaryJar(dependsOn: ['compileReleaseJavaWithJavac'], type: Jar) {

    baseName = "log4j-android"
//    appendix = "bridge"
    version = "${versionMajor}.${versionMinor}.${versionPatch}"
//    classifier = "release"
    extension = "jar"

    // [baseName]-[appendix]-[version]-[classifier].[extension]
    // archiveName = "log4j-android.jar"

    def srcClassDir = [project.buildDir.absolutePath + "/intermediates/javac/release/classes"]
    from srcClassDir

    exclude "**/BuildConfig.class"
    exclude "**/R.class"
    exclude "**/R\$*.class"
}

task sourcesJar(type: Jar) {

    baseName = "log4j-android"
//    appendix = "bridge"
    version = "${versionMajor}.${versionMinor}.${versionPatch}"
    classifier = "sources"
    extension = "jar"

    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {

    baseName = "log4j-android"
//    appendix = "bridge"
    version = "${versionMajor}.${versionMinor}.${versionPatch}"
    classifier = "javadoc"
    extension = "jar"

    from javadoc.destinationDir
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

publish {
    userOrg = USER_ORG
    repoName = REPO_NAME
    groupId = GROUP_ID
    artifactId = ARTIFACT_ID
    publishVersion = PUBLISH_VERSION
    desc = DESCRIPTION
    website = WEB_SITE
    issueTracker = "${website}/issues"
    repository = "${website}.git"
    bintrayUser = properties.getProperty("bintray.user")
    bintrayKey = properties.getProperty("bintray.apikey")
    dryRun = false
}

